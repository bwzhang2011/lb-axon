// *****************************************************************************
//
// *****************************************************************************

subprojects {

    apply plugin: 'java'
    apply plugin: 'osgi'
    apply plugin: 'maven'

    version             = '1.0.0.SNAPSHOT'
    group               = 'com.github.lburgazzoli'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    ext {
        slf4jVersion              = '1.7.5'
        log4jVersion              = '1.2.17'
        jacksonVersion            = '2.3.2'
        jacksonAnnotationsVersion = '2.3.2'
        openhftLangVersion        = '6.1.4'
        openhftChronicleVersion   = '2.0.3'
        hazelcastVersion          = '3.2'
        osgiVersion               = '5.0.0'
        guavaVersion              = '16.0.1'
        axonVersion               = '2.1.2'
        junitVersion              = '4.11'
        felixVersion              = '4.2.1'
        paxExamVersion            = '3.4.0'
        paxUrlVersion             = '1.6.0'
        jgroupsVersion            = '3.4.2.Final'
        commonsLangVersion        = '3.3.1'
        commonsBeanutilsVersion   = '1.9.1'
        commonsCollectionsVersion = '4.0'
        javaxCacheVersion         = '1.0.0'
        springVersion             = '3.1.0.RELEASE'

        gradleVersion             = '1.11'
        gradleScriptDir           = "${rootProject.projectDir}/gradle"
            
        if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
            ciUsr = sonatypeUsername
            ciPwd = sonatypePassword
        } else {
            ciUsr = "$System.env.CI_DEPLOY_USERNAME"
            ciPwd = "$System.env.CI_DEPLOY_PASSWORD"
        }
        
        prefix              = 'lb'
        isReleaseVersion    = !version.endsWith("SNAPSHOT")
        gitRoot             = "https://github.com/lburgazzoli"
        gitProject          = "https://github.com/lburgazzoli/lb-axon"
        deploySnapshot      = "https://oss.sonatype.org/content/repositories/snapshots"
    }
    
    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        compile "org.apache.commons:commons-lang3:$commonsLangVersion"
        compile "org.apache.commons:commons-collections4:$commonsCollectionsVersion"
        compile "commons-beanutils:commons-beanutils:$commonsBeanutilsVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:slf4j-ext:$slf4jVersion"
        compile "org.slf4j:jul-to-slf4j:$slf4jVersion"
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
        compile "log4j:log4j:$log4jVersion"
        compile "org.apache.geronimo.specs:geronimo-jpa_2.0_spec:1.1"
        compile "org.axonframework:axon-core:$axonVersion"
        compile "org.axonframework:axon-distributed-commandbus:$axonVersion"
        compile "org.jgroups:jgroups:$jgroupsVersion"
    }

    jar {
        baseName = "${project.prefix}-${project.name}"

        manifest.attributes['Bundle-Description'     ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-Name'            ] = "${project.prefix} :: ${project.name}"
        manifest.attributes['Bundle-SymbolicName'    ] = "${project.group}-${project.prefix}-${project.name}"
        manifest.attributes['Bundle-Version'         ] = project.version
        manifest.attributes['Implementation-Title'   ] = "${project.group}-${project.prefix}-${project.name}-${project.version}"
        manifest.attributes['Implementation-Version' ] = project.version
        manifest.attributes['Implementation-Vendor'  ] = 'lb'

        manifest.classesDir = new File("$buildDir/classes/main")
        manifest.classpath  = project.runtimeClasspath
    }

    test {
        testLogging {
            events "failed"
            exceptionFormat "full"
        }

        systemProperties = [
            'version.project'            : version,
            'version.slf4j'              : slf4jVersion,
            'version.log4j'              : log4jVersion,
            'version.jackson'            : jacksonVersion,
            'version.hazelcast'          : hazelcastVersion,
            'version.osgi'               : osgiVersion,
            'version.guava'              : guavaVersion,
            'version.axon'               : axonVersion,
            'version.junit'              : junitVersion,
            'version.felix'              : felixVersion,
            'version.paxExam'            : paxExamVersion,
            'version.paxUrl'             : paxUrlVersion,
            'version.commonsLang'        : commonsLangVersion,
            'version.commonsCollections' : commonsCollectionsVersion,
            'version.javaxCache'         : javaxCacheVersion,
            'pax.exam.framework'         : 'felix',
            'pax.exam.logging'           : 'none'
        ]
    }

    [compileJava, compileTestJava]*.options*.compilerArgs = [
        "-Xlint:unchecked",
        "-Xlint:deprecation",
    ]

    // *************************************************************************
    //
    // *************************************************************************

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    // *************************************************************************
    //
    // *************************************************************************

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    uploadArchives {
        repositories {
            mavenDeployer {

                repository(url: deploySnapshot) {
                    authentication(
                        userName: "${project.ciUsr}",
                        password: "${project.ciPwd}"
                    )
                }

                pom {
                    project {
                        name          = "${project.prefix}-${project.name}"
                        description   = "${project.prefix}-${project.name}"
                        url           = "${project.gitProject}"
                        packaging     = 'jar'

                        licenses {
                            license {
                        	    name         = "The Apache Software License, Version 2.0"
                        		url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        		distribution = "repo"
                        	}
                        }
            
                        scm {
                            url                 = "${project.gitProject}"
                            connection          = "scm:git:${project.gitProject}.git"
                            developerConnection = "scm:git:${project.gitProject}.git"
                        }
                    }
                }
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

