// *****************************************************************************
// -Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager
// *****************************************************************************

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
    }
}

// *****************************************************************************
//
// *****************************************************************************

allprojects {
    configurations {
        all {
            resolutionStrategy {
                componentSelection {
                    all { ComponentSelection selection ->
                        boolean rejected = [ 'M1', 'M2' ,'rc', 'Alpha' , 'Beta', "EA"].any { qualifier ->
                            return selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                        }
                        if (rejected) {
                            selection.reject('Release candidate')
                        }
                    }
                }
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

subprojects {

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'osgi'
    apply plugin: 'maven'
    apply plugin: 'com.bmuschko.nexus'
    apply plugin: 'com.github.ben-manes.versions'

    version             = '1.0.0-SNAPSHOT'
    group               = 'com.github.lburgazzoli'
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
  
    ext {
        versions = [
            'slf4j'              : '1.7.12',
            'log4j2'             : '2.3',
            'jackson'            : '2.5.1',
            'openhftLang'        : '6.6.11',
            'openhftChronicle'   : '3.4.4',
            'hazelcast'          : '3.5',
            'osgi'               : '5.0.0',
            'guava'              : '18.0',
            'axon'               : '2.4.2',
            'disruptor'          : '3.3.2',
            'junit'              : '4.12',
            'felix'              : '5.0.1',
            'paxExam'            : '4.5.0',
            'paxUrl'             : '2.4.1',
            'jgroups'            : '3.6.4.Final',
            'commonsLang'        : '3.4',
            'commonsBeanutils'   : '1.9.2',
            'commonsCollections' : '4.0',
            'javaxCache'         : '1.0.0',
            'spring'             : '4.1.4.RELEASE',
            'groovy'             : '2.4.4',
            'jodaTime'           : '2.8.1',
            'lbHazelcast'        : '3.5.0-SNAPSHOT',
            'jdom'               : '2.0.2',
            'xom'                : '1.2.10'
        ]

        if (!project.hasProperty('nexusUsername') && !project.hasProperty('nexusPassword')) {
            nexusUsername = "$System.env.CI_DEPLOY_USERNAME"
            nexusPassword = "$System.env.CI_DEPLOY_PASSWORD"
        }

        gradleVersion    = '2.5'
        gradleScriptDir  = "${rootProject.projectDir}/gradle"
        isReleaseVersion = !version.endsWith("SNAPSHOT")
        gitRoot          = 'https://github.com/lburgazzoli'
        gitProject       = 'https://github.com/lburgazzoli/lb-axon'
        osgiVersion      = project.version.replaceAll('-','.')
    }
   
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()

        maven { url 'http://repo.springsource.org/release/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

    dependencies {
        compile("org.slf4j:slf4j-api:$versions.slf4j") { transitive = false }  
        compile("org.slf4j:slf4j-ext:$versions.slf4j") { transitive = false }

        runtime "org.apache.logging.log4j:log4j-api:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-core:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-jcl:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-jul:$versions.log4j2"
        runtime "org.apache.logging.log4j:log4j-slf4j-impl:$versions.log4j2"

        compile "org.apache.commons:commons-lang3:$versions.commonsLang"
        compile "org.apache.commons:commons-collections4:$versions.commonsCollections"
        compile "commons-beanutils:commons-beanutils:$versions.commonsBeanutils"
        compile "org.apache.geronimo.specs:geronimo-jpa_2.0_spec:1.1"
        compile "org.axonframework:axon-core:$versions.axon"
        compile "org.axonframework:axon-distributed-commandbus:$versions.axon"
        compile "org.jgroups:jgroups:$versions.jgroups"
        compile "org.codehaus.groovy:groovy-all:$versions.groovy"
        compile "joda-time:joda-time:$versions.jodaTime"

        runtime "com.io7m.xom:xom:$versions.xom"
        runtime "org.jdom:jdom:$versions.jdom"

        testCompile "junit:junit:$versions.junit"
    }

    jar {
        baseName = "${project.name}"

        manifest.attributes['Bundle-Description'     ] = "${project.name}"
        manifest.attributes['Bundle-Name'            ] = "${project.name}"
        manifest.attributes['Bundle-SymbolicName'    ] = "${project.group}-${project.name}"
        manifest.attributes['Bundle-Version'         ] = osgiVersion
        manifest.attributes['Implementation-Title'   ] = "${project.group}-${project.name}-${osgiVersion}"
        manifest.attributes['Implementation-Version' ] = osgiVersion
        manifest.attributes['Implementation-Vendor'  ] = 'lb'
    }

    test {
        testLogging {
            events          "failed"
            exceptionFormat "full"
        }
    }

    [compileJava, compileTestJava]*.options*.compilerArgs = [
        "-Xlint:unchecked",
        "-Xlint:deprecation",
    ]

    // *************************************************************************
    //
    // *************************************************************************

    nexus {
        sign    = false
    }

    extraArchive {
        javadoc = true
        sources = true
        tests   = false
    }

    modifyPom {
        project {
            name          = "${project.name}"
            description   = "${project.name}"
            url           = "${project.gitProject}"
            packaging     = 'jar'

            licenses {
                license {
                    name         = "The Apache Software License, Version 2.0"
                    url          = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    distribution = "repo"
                }
            }

            scm {
                url                 = "${project.gitProject}"
                connection          = "scm:git:${project.gitProject}.git"
                developerConnection = "scm:git:${project.gitProject}.git"
            }
        }
    }

    dependencyUpdates {
        revision = 'release'
    }
}

// *****************************************************************************
//
// *****************************************************************************

task wrapper(type: Wrapper) {
    gradleVersion = "$gradleVersion"
}

