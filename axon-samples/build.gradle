project.ext {
    bundleInportPackages = [ '*' ]
    bundleExportPackages = [ '*' ]
}

dependencies {
    compile project(':lb-axon-hazelcast')
    compile project(':lb-axon-chronicle')
}

jar {
    manifest {
        instruction 'Import-Package' , bundleInportPackages.join(',')
        instruction 'Export-Package' , bundleExportPackages.join(',')
    }
}

// *****************************************************************************
//
// *****************************************************************************

task axonHzSimpleApp(dependsOn: classes) << {
    javaexec {
        main      = 'org.axonframework.ext.hazelcast.samples.queue.SimpleApp'
        classpath = project.runtimeClasspath
        jvmArgs   = [ '-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager' ]
    }
}

task axonHzClient(dependsOn: classes) << {
    javaexec {
        main      = 'org.axonframework.ext.hazelcast.samples.executor.AxonClient'
        classpath = project.runtimeClasspath
        jvmArgs   = [ '-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager' ]
    }
}

task axonHzProcessor(dependsOn: classes) << {
    javaexec {
        main      = 'org.axonframework.ext.hazelcast.samples.executor.AxonProcessor'
        classpath = project.runtimeClasspath
        jvmArgs   = [ '-Djava.util.logging.manager=org.apache.logging.log4j.jul.LogManager' ]
    }
}

